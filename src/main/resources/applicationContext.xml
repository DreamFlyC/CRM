<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
	   <!-- 开启扫描包  -->
	<context:component-scan base-package="com.lw.**.persistence,com.lw.**.service" />

	<context:property-placeholder ignore-unresolvable="true" location="classpath:jdbc.properties"/>
	<bean id="dataSource" name="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="${jdbc.maxIdle}"/>
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<!-- 最大建立连接等待时间。如果超过此时间将接到异常。设为－1表示无限制 -->
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<!--#给出一条简单的sql语句进行验证 -->
		<!--<property name="validationQuery" value="select getdate()" />-->
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
		<!-- 回收被遗弃的（一般是忘了释放的）数据库连接到连接池中 -->
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<!-- 数据库连接过多长时间不用将被视为被遗弃而收回连接池中 -->
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<!-- #连接的超时时间，默认为半小时。 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<!--# 失效检查线程运行时间间隔，要小于MySQL默认-->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<!--# 检查连接是否有效-->
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
		<!--# 检查连接有效性的SQL语句-->
		<property name="validationQuery" value="SELECT 1 FROM dual"/>
	</bean>
 	<!-- 数据库连接 end -->

 	<!-- Session工厂 begin -->
	<!-- 自定义SqlSessionFactoryBean 实现typeAliasesPackage支持通配符-->
	<bean id="sqlSessionFactory" class="com.lw.acommon.util.PackagesSqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 扫描model包 使用别名 不支持通配符-->
		<property name="typeAliasesPackage" value="com.lw.**.entity"/>
		<!--<property name="configLocation" value="classpath:SqlMapConfig.xml"/>-->
	</bean>
     <!-- Session 工厂 end -->

	<!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- 给出需要扫描Dao接口包 -->
		 <property name="basePackage" value="com.lw.**.persistence"/>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<property name="rollbackOnCommitFailure" value="true"/>
	</bean>

	<!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
